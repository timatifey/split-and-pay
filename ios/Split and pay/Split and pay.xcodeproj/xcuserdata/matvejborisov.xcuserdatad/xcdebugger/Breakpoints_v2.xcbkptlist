<?xml version="1.0" encoding="UTF-8"?>
<Bucket
   uuid = "EDD721BE-9189-48C9-B6FC-BA18F0ECD8F5"
   type = "1"
   version = "2.0">
   <Breakpoints>
      <BreakpointProxy
         BreakpointExtensionID = "Xcode.Breakpoint.FileBreakpoint">
         <BreakpointContent
            uuid = "475626E8-2B6A-4268-A415-43202942EC10"
            shouldBeEnabled = "No"
            ignoreCount = "0"
            continueAfterRunningActions = "No"
            filePath = "Split and pay/Services/Network.swift"
            startingColumnNumber = "9223372036854775807"
            endingColumnNumber = "9223372036854775807"
            startingLineNumber = "47"
            endingLineNumber = "47"
            landmarkName = "request(_:)"
            landmarkType = "7">
         </BreakpointContent>
      </BreakpointProxy>
      <BreakpointProxy
         BreakpointExtensionID = "Xcode.Breakpoint.FileBreakpoint">
         <BreakpointContent
            uuid = "17EBC3CB-60C9-4B5E-B12F-893DF2880315"
            shouldBeEnabled = "No"
            ignoreCount = "0"
            continueAfterRunningActions = "No"
            filePath = "Split and pay/RoomView/RoomViewModel.swift"
            startingColumnNumber = "9223372036854775807"
            endingColumnNumber = "9223372036854775807"
            startingLineNumber = "33"
            endingLineNumber = "33"
            landmarkName = "loadRoom(id:)"
            landmarkType = "7">
         </BreakpointContent>
      </BreakpointProxy>
      <BreakpointProxy
         BreakpointExtensionID = "Xcode.Breakpoint.FileBreakpoint">
         <BreakpointContent
            uuid = "AECB9D3D-96FB-4B35-A17E-3D86BAD75D37"
            shouldBeEnabled = "Yes"
            ignoreCount = "0"
            continueAfterRunningActions = "No"
            filePath = "Split and pay/RoomView/RoomView.swift"
            startingColumnNumber = "9223372036854775807"
            endingColumnNumber = "9223372036854775807"
            startingLineNumber = "40"
            endingLineNumber = "40"
            landmarkName = "body"
            landmarkType = "24">
            <Locations>
               <Location
                  uuid = "AECB9D3D-96FB-4B35-A17E-3D86BAD75D37 - c14953af8faa8f88"
                  shouldBeEnabled = "Yes"
                  ignoreCount = "0"
                  continueAfterRunningActions = "No"
                  symbolName = "closure #1 () -&gt; SwiftUI._ConditionalContent&lt;SwiftUI._ConditionalContent&lt;&lt;&lt;opaque return type of SwiftUI.View.controlSize(SwiftUI.ControlSize) -&gt; some&gt;&gt;.0, SwiftUI.VStack&lt;SwiftUI.TupleView&lt;(&lt;&lt;opaque return type of SwiftUI.View.padding(SwiftUI.EdgeInsets) -&gt; some&gt;&gt;.0, &lt;&lt;opaque return type of SwiftUI.View.multilineTextAlignment(SwiftUI.TextAlignment) -&gt; some&gt;&gt;.0)&gt;&gt;&gt;, SwiftUI.LazyVStack&lt;SwiftUI.ForEach&lt;Swift.Array&lt;Split_and_pay.ReceiptDTO&gt;, Swift.Int, Split_and_pay.ItemView&gt;&gt;&gt; in closure #1 () -&gt; SwiftUI.TupleView&lt;(&lt;&lt;opaque return type of SwiftUI.View.refreshable(action: @Sendable () async -&gt; ()) -&gt; some&gt;&gt;.0, &lt;&lt;opaque return type of SwiftUI.View.background&lt;&#x3c4;_0_0 where &#x3c4;_1_0: SwiftUI.ShapeStyle&gt;(_: &#x3c4;_1_0, ignoresSafeAreaEdges: SwiftUI.Edge.Set) -&gt; some&gt;&gt;.0)&gt; in closure #1 () -&gt; SwiftUI.TupleView&lt;(&lt;&lt;opaque return type of SwiftUI.View.ignoresSafeArea(_: SwiftUI.SafeAreaRegions, edges: SwiftUI.Edge.Set) -&gt; some&gt;&gt;.0, &lt;&lt;opaque return type of SwiftUI.View.padding(SwiftUI.Edge.Set, Swift.Optional&lt;CoreGraphics.CGFloat&gt;) -&gt; some&gt;&gt;.0)&gt; in Split_and_pay.RoomView.body.getter : some"
                  moduleName = "Split and pay"
                  usesParentBreakpointCondition = "Yes"
                  urlString = "file:///Users/matvejborisov/Documents/%D1%83%D1%87%D0%B5%D0%B1%D0%B0/%D0%9C%D0%B0%D0%B3%D0%B8%D1%81%D1%82%D1%80%D0%B0%D1%82%D1%83%D1%80%D0%B0/%D0%A5%D0%B0%D0%BA%D1%82%D0%BE%D0%BD%20%D0%BE%D1%81%D0%B5%D0%BD%D1%8C%202023/split-and-pay/ios/Split%20and%20pay/Split%20and%20pay/RoomView/RoomView.swift"
                  startingColumnNumber = "9223372036854775807"
                  endingColumnNumber = "9223372036854775807"
                  startingLineNumber = "40"
                  endingLineNumber = "40"
                  offsetFromSymbolStart = "2396">
               </Location>
               <Location
                  uuid = "AECB9D3D-96FB-4B35-A17E-3D86BAD75D37 - c14953af8faa8f88"
                  shouldBeEnabled = "Yes"
                  ignoreCount = "0"
                  continueAfterRunningActions = "No"
                  symbolName = "closure #1 () -&gt; SwiftUI._ConditionalContent&lt;SwiftUI._ConditionalContent&lt;&lt;&lt;opaque return type of SwiftUI.View.controlSize(SwiftUI.ControlSize) -&gt; some&gt;&gt;.0, SwiftUI.VStack&lt;SwiftUI.TupleView&lt;(&lt;&lt;opaque return type of SwiftUI.View.padding(SwiftUI.EdgeInsets) -&gt; some&gt;&gt;.0, &lt;&lt;opaque return type of SwiftUI.View.multilineTextAlignment(SwiftUI.TextAlignment) -&gt; some&gt;&gt;.0)&gt;&gt;&gt;, SwiftUI.LazyVStack&lt;SwiftUI.ForEach&lt;Swift.Array&lt;Split_and_pay.ReceiptDTO&gt;, Swift.Int, Split_and_pay.ItemView&gt;&gt;&gt; in closure #1 () -&gt; SwiftUI.TupleView&lt;(&lt;&lt;opaque return type of SwiftUI.View.refreshable(action: @Sendable () async -&gt; ()) -&gt; some&gt;&gt;.0, &lt;&lt;opaque return type of SwiftUI.View.background&lt;&#x3c4;_0_0 where &#x3c4;_1_0: SwiftUI.ShapeStyle&gt;(_: &#x3c4;_1_0, ignoresSafeAreaEdges: SwiftUI.Edge.Set) -&gt; some&gt;&gt;.0)&gt; in closure #1 () -&gt; SwiftUI.TupleView&lt;(&lt;&lt;opaque return type of SwiftUI.View.ignoresSafeArea(_: SwiftUI.SafeAreaRegions, edges: SwiftUI.Edge.Set) -&gt; some&gt;&gt;.0, &lt;&lt;opaque return type of SwiftUI.View.padding(SwiftUI.Edge.Set, Swift.Optional&lt;CoreGraphics.CGFloat&gt;) -&gt; some&gt;&gt;.0)&gt; in Split_and_pay.RoomView.body.getter : some"
                  moduleName = "Split and pay"
                  usesParentBreakpointCondition = "Yes"
                  urlString = "file:///Users/matvejborisov/Documents/%D1%83%D1%87%D0%B5%D0%B1%D0%B0/%D0%9C%D0%B0%D0%B3%D0%B8%D1%81%D1%82%D1%80%D0%B0%D1%82%D1%83%D1%80%D0%B0/%D0%A5%D0%B0%D0%BA%D1%82%D0%BE%D0%BD%20%D0%BE%D1%81%D0%B5%D0%BD%D1%8C%202023/split-and-pay/ios/Split%20and%20pay/Split%20and%20pay/RoomView/RoomView.swift"
                  startingColumnNumber = "9223372036854775807"
                  endingColumnNumber = "9223372036854775807"
                  startingLineNumber = "40"
                  endingLineNumber = "40"
                  offsetFromSymbolStart = "2452">
               </Location>
               <Location
                  uuid = "AECB9D3D-96FB-4B35-A17E-3D86BAD75D37 - 8b8bf7c21068267e"
                  shouldBeEnabled = "Yes"
                  ignoreCount = "0"
                  continueAfterRunningActions = "No"
                  symbolName = "closure #2 () -&gt; SwiftUI.ForEach&lt;Swift.Array&lt;Split_and_pay.ReceiptDTO&gt;, Swift.Int, Split_and_pay.ItemView&gt; in closure #1 () -&gt; SwiftUI._ConditionalContent&lt;SwiftUI._ConditionalContent&lt;&lt;&lt;opaque return type of SwiftUI.View.controlSize(SwiftUI.ControlSize) -&gt; some&gt;&gt;.0, SwiftUI.VStack&lt;SwiftUI.TupleView&lt;(&lt;&lt;opaque return type of SwiftUI.View.padding(SwiftUI.EdgeInsets) -&gt; some&gt;&gt;.0, &lt;&lt;opaque return type of SwiftUI.View.multilineTextAlignment(SwiftUI.TextAlignment) -&gt; some&gt;&gt;.0)&gt;&gt;&gt;, SwiftUI.LazyVStack&lt;SwiftUI.ForEach&lt;Swift.Array&lt;Split_and_pay.ReceiptDTO&gt;, Swift.Int, Split_and_pay.ItemView&gt;&gt;&gt; in closure #1 () -&gt; SwiftUI.TupleView&lt;(&lt;&lt;opaque return type of SwiftUI.View.refreshable(action: @Sendable () async -&gt; ()) -&gt; some&gt;&gt;.0, &lt;&lt;opaque return type of SwiftUI.View.background&lt;&#x3c4;_0_0 where &#x3c4;_1_0: SwiftUI.ShapeStyle&gt;(_: &#x3c4;_1_0, ignoresSafeAreaEdges: SwiftUI.Edge.Set) -&gt; some&gt;&gt;.0)&gt; in closure #1 () -&gt; SwiftUI.TupleView&lt;(&lt;&lt;opaque return type of SwiftUI.View.ignoresSafeArea(_: SwiftUI.SafeAreaRegions, edges: SwiftUI.Edge.Set) -&gt; some&gt;&gt;.0, &lt;&lt;opaque return type of SwiftUI.View.padding(SwiftUI.Edge.Set, Swift.Optional&lt;CoreGraphics.CGFloat&gt;) -&gt; some&gt;&gt;.0)&gt; in Split_and_pay.RoomView.body.getter : some"
                  moduleName = "Split and pay"
                  usesParentBreakpointCondition = "Yes"
                  urlString = "file:///Users/matvejborisov/Documents/%D1%83%D1%87%D0%B5%D0%B1%D0%B0/%D0%9C%D0%B0%D0%B3%D0%B8%D1%81%D1%82%D1%80%D0%B0%D1%82%D1%83%D1%80%D0%B0/%D0%A5%D0%B0%D0%BA%D1%82%D0%BE%D0%BD%20%D0%BE%D1%81%D0%B5%D0%BD%D1%8C%202023/split-and-pay/ios/Split%20and%20pay/Split%20and%20pay/RoomView/RoomView.swift"
                  startingColumnNumber = "9223372036854775807"
                  endingColumnNumber = "9223372036854775807"
                  startingLineNumber = "41"
                  endingLineNumber = "41"
                  offsetFromSymbolStart = "132">
               </Location>
            </Locations>
         </BreakpointContent>
      </BreakpointProxy>
      <BreakpointProxy
         BreakpointExtensionID = "Xcode.Breakpoint.FileBreakpoint">
         <BreakpointContent
            uuid = "9A7AFA27-E38A-47FF-ACEE-00FF2CD4363F"
            shouldBeEnabled = "Yes"
            ignoreCount = "0"
            continueAfterRunningActions = "No"
            filePath = "Split and pay/RoomView/RoomView.swift"
            startingColumnNumber = "9223372036854775807"
            endingColumnNumber = "9223372036854775807"
            startingLineNumber = "24"
            endingLineNumber = "24"
            landmarkName = "body"
            landmarkType = "24">
            <Locations>
               <Location
                  uuid = "9A7AFA27-E38A-47FF-ACEE-00FF2CD4363F - e57f29bf2fb9f08"
                  shouldBeEnabled = "Yes"
                  ignoreCount = "0"
                  continueAfterRunningActions = "No"
                  symbolName = "closure #1 () -&gt; SwiftUI.TupleView&lt;(&lt;&lt;opaque return type of SwiftUI.View.refreshable(action: @Sendable () async -&gt; ()) -&gt; some&gt;&gt;.0, &lt;&lt;opaque return type of SwiftUI.View.background&lt;&#x3c4;_0_0 where &#x3c4;_1_0: SwiftUI.ShapeStyle&gt;(_: &#x3c4;_1_0, ignoresSafeAreaEdges: SwiftUI.Edge.Set) -&gt; some&gt;&gt;.0)&gt; in closure #1 () -&gt; SwiftUI.TupleView&lt;(&lt;&lt;opaque return type of SwiftUI.View.ignoresSafeArea(_: SwiftUI.SafeAreaRegions, edges: SwiftUI.Edge.Set) -&gt; some&gt;&gt;.0, &lt;&lt;opaque return type of SwiftUI.View.padding(SwiftUI.Edge.Set, Swift.Optional&lt;CoreGraphics.CGFloat&gt;) -&gt; some&gt;&gt;.0)&gt; in Split_and_pay.RoomView.body.getter : some"
                  moduleName = "Split and pay"
                  usesParentBreakpointCondition = "Yes"
                  urlString = "file:///Users/matvejborisov/Documents/%D1%83%D1%87%D0%B5%D0%B1%D0%B0/%D0%9C%D0%B0%D0%B3%D0%B8%D1%81%D1%82%D1%80%D0%B0%D1%82%D1%83%D1%80%D0%B0/%D0%A5%D0%B0%D0%BA%D1%82%D0%BE%D0%BD%20%D0%BE%D1%81%D0%B5%D0%BD%D1%8C%202023/split-and-pay/ios/Split%20and%20pay/Split%20and%20pay/RoomView/RoomView.swift"
                  startingColumnNumber = "9223372036854775807"
                  endingColumnNumber = "9223372036854775807"
                  startingLineNumber = "24"
                  endingLineNumber = "24"
                  offsetFromSymbolStart = "512">
               </Location>
               <Location
                  uuid = "9A7AFA27-E38A-47FF-ACEE-00FF2CD4363F - c14953af8faa91bb"
                  shouldBeEnabled = "Yes"
                  ignoreCount = "0"
                  continueAfterRunningActions = "No"
                  symbolName = "closure #1 () -&gt; SwiftUI._ConditionalContent&lt;SwiftUI._ConditionalContent&lt;&lt;&lt;opaque return type of SwiftUI.View.controlSize(SwiftUI.ControlSize) -&gt; some&gt;&gt;.0, SwiftUI.VStack&lt;SwiftUI.TupleView&lt;(&lt;&lt;opaque return type of SwiftUI.View.padding(SwiftUI.EdgeInsets) -&gt; some&gt;&gt;.0, &lt;&lt;opaque return type of SwiftUI.View.multilineTextAlignment(SwiftUI.TextAlignment) -&gt; some&gt;&gt;.0)&gt;&gt;&gt;, SwiftUI.LazyVStack&lt;SwiftUI.ForEach&lt;Swift.Array&lt;Split_and_pay.ReceiptDTO&gt;, Swift.Int, Split_and_pay.ItemView&gt;&gt;&gt; in closure #1 () -&gt; SwiftUI.TupleView&lt;(&lt;&lt;opaque return type of SwiftUI.View.refreshable(action: @Sendable () async -&gt; ()) -&gt; some&gt;&gt;.0, &lt;&lt;opaque return type of SwiftUI.View.background&lt;&#x3c4;_0_0 where &#x3c4;_1_0: SwiftUI.ShapeStyle&gt;(_: &#x3c4;_1_0, ignoresSafeAreaEdges: SwiftUI.Edge.Set) -&gt; some&gt;&gt;.0)&gt; in closure #1 () -&gt; SwiftUI.TupleView&lt;(&lt;&lt;opaque return type of SwiftUI.View.ignoresSafeArea(_: SwiftUI.SafeAreaRegions, edges: SwiftUI.Edge.Set) -&gt; some&gt;&gt;.0, &lt;&lt;opaque return type of SwiftUI.View.padding(SwiftUI.Edge.Set, Swift.Optional&lt;CoreGraphics.CGFloat&gt;) -&gt; some&gt;&gt;.0)&gt; in Split_and_pay.RoomView.body.getter : some"
                  moduleName = "Split and pay"
                  usesParentBreakpointCondition = "Yes"
                  urlString = "file:///Users/matvejborisov/Documents/%D1%83%D1%87%D0%B5%D0%B1%D0%B0/%D0%9C%D0%B0%D0%B3%D0%B8%D1%81%D1%82%D1%80%D0%B0%D1%82%D1%83%D1%80%D0%B0/%D0%A5%D0%B0%D0%BA%D1%82%D0%BE%D0%BD%20%D0%BE%D1%81%D0%B5%D0%BD%D1%8C%202023/split-and-pay/ios/Split%20and%20pay/Split%20and%20pay/RoomView/RoomView.swift"
                  startingColumnNumber = "9223372036854775807"
                  endingColumnNumber = "9223372036854775807"
                  startingLineNumber = "25"
                  endingLineNumber = "25"
                  offsetFromSymbolStart = "672">
               </Location>
               <Location
                  uuid = "9A7AFA27-E38A-47FF-ACEE-00FF2CD4363F - c14953af8faa9198"
                  shouldBeEnabled = "Yes"
                  ignoreCount = "0"
                  continueAfterRunningActions = "No"
                  symbolName = "closure #1 () -&gt; SwiftUI._ConditionalContent&lt;SwiftUI._ConditionalContent&lt;&lt;&lt;opaque return type of SwiftUI.View.controlSize(SwiftUI.ControlSize) -&gt; some&gt;&gt;.0, SwiftUI.VStack&lt;SwiftUI.TupleView&lt;(&lt;&lt;opaque return type of SwiftUI.View.padding(SwiftUI.EdgeInsets) -&gt; some&gt;&gt;.0, &lt;&lt;opaque return type of SwiftUI.View.multilineTextAlignment(SwiftUI.TextAlignment) -&gt; some&gt;&gt;.0)&gt;&gt;&gt;, SwiftUI.LazyVStack&lt;SwiftUI.ForEach&lt;Swift.Array&lt;Split_and_pay.ReceiptDTO&gt;, Swift.Int, Split_and_pay.ItemView&gt;&gt;&gt; in closure #1 () -&gt; SwiftUI.TupleView&lt;(&lt;&lt;opaque return type of SwiftUI.View.refreshable(action: @Sendable () async -&gt; ()) -&gt; some&gt;&gt;.0, &lt;&lt;opaque return type of SwiftUI.View.background&lt;&#x3c4;_0_0 where &#x3c4;_1_0: SwiftUI.ShapeStyle&gt;(_: &#x3c4;_1_0, ignoresSafeAreaEdges: SwiftUI.Edge.Set) -&gt; some&gt;&gt;.0)&gt; in closure #1 () -&gt; SwiftUI.TupleView&lt;(&lt;&lt;opaque return type of SwiftUI.View.ignoresSafeArea(_: SwiftUI.SafeAreaRegions, edges: SwiftUI.Edge.Set) -&gt; some&gt;&gt;.0, &lt;&lt;opaque return type of SwiftUI.View.padding(SwiftUI.Edge.Set, Swift.Optional&lt;CoreGraphics.CGFloat&gt;) -&gt; some&gt;&gt;.0)&gt; in Split_and_pay.RoomView.body.getter : some"
                  moduleName = "Split and pay"
                  usesParentBreakpointCondition = "Yes"
                  urlString = "file:///Users/matvejborisov/Documents/%D1%83%D1%87%D0%B5%D0%B1%D0%B0/%D0%9C%D0%B0%D0%B3%D0%B8%D1%81%D1%82%D1%80%D0%B0%D1%82%D1%83%D1%80%D0%B0/%D0%A5%D0%B0%D0%BA%D1%82%D0%BE%D0%BD%20%D0%BE%D1%81%D0%B5%D0%BD%D1%8C%202023/split-and-pay/ios/Split%20and%20pay/Split%20and%20pay/RoomView/RoomView.swift"
                  startingColumnNumber = "9223372036854775807"
                  endingColumnNumber = "9223372036854775807"
                  startingLineNumber = "24"
                  endingLineNumber = "24"
                  offsetFromSymbolStart = "672">
               </Location>
            </Locations>
         </BreakpointContent>
      </BreakpointProxy>
   </Breakpoints>
</Bucket>
